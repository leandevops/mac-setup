#!/usr/bin/env bash

# Exit on any individual command failure.
set -e

# Pretty colors.
red='\033[0;31m'
green='\033[0;32m'
neutral='\033[0m'

# Shared functions
pretty_print() {
  printf "\n%b\n" "$1"
}

pretty_print "${green}Starting ...${neutral}"

# Oh my zsh installation
if [ ! -d "$HOME/.oh-my-zsh" ]; then
  pretty_print "Installing oh-my-zsh..."
  curl -L http://install.ohmyz.sh | sh
else
  pretty_print "oh-my-zsh is already installed, skipping ..."
fi

# Homebrew installation
if ! command -v brew &>/dev/null; then
  pretty_print "Installing Homebrew, an OSX package manager, follow the instructions..."
    ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"

  if ! grep -qs "recommended by brew doctor" ~/.zshrc; then
    pretty_print "Put Homebrew location earlier in PATH ..."
      printf '\n# recommended by brew doctor\n' >> ~/.zshrc
      printf 'export PATH="/usr/local/bin:$PATH"\n' >> ~/.zshrc
      export PATH="/usr/local/bin:$PATH"
  fi
else
  pretty_print "You already have Homebrew installed...good job!"
fi

pretty_print "Updating brew formulas"
  brew update &>/dev/null

make all

# Installing vscode extensions
for ext in $(cat install/Codefile)
do
  pretty_print "Installing vscode extension: $ext"
  code --install-extension $ext
done

# Install python packages
pip3 install ansible ansible-lint

# Install terraform
tfenv install 0.13.7
tfenv use 0.13.7

pretty_print "Copying configs to .configs directory"
mkdir -p ~/.config
cp -R .config/* ~/.config

pretty_print "Installing fonts"
cp fonts/*.ttf /Users/$USER/Library/Fonts
cp fonts/*.otf /Users/$USER/Library/Fonts

pretty_print "Installing icons"
cp icons/Alacritty.icns /Applications/Alacritty.app/Contents/Resources/alacritty.icns

pretty_print "Changing zshrc config"
cp .config/zsh/.zshrc /Users/$USER/.zshrc

pretty_print "Configuring vscode"
cp .config/code/settings.json /Users/$USER/Library/Application\ Support/Code/User/settings.json

pretty_print "${green}We are done!...everything looks good!${neutral}"
